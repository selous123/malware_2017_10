#coding:utf-8
import numpy as np
import os
import math
from PIL import Image
import argparse

#transform byte file to image
def transform_to_img(source_path,des_path,size):
    f = open(source_path,'rb')
    content = f.read()
    l = [ord(c) for c in content]
    width = int(math.floor(math.sqrt(len(l))))
    img = Image.fromarray(np.resize(np.uint8(np.array(l)),(width,width)))
    #resize
    img = img.resize((size,size),Image.ANTIALIAS)

    print des_path
    img.save(des_path)
# =============================================================================
# def readFile(dirPath):
#     paths = os.listdir(dirPath)
#     print paths[0]
#     for path in paths:
#         transform_to_img(dirPath,path)
# =============================================================================
if __name__=='__main__':
    
    #parse argument 
    parser = argparse.ArgumentParser()
    parser.add_argument(
            '--size',
            type = int,
            default = 512,
            help = 'size of image'
            )
    
    parser.add_argument(
            'source_path',
            type = str,
            help = 'path of source file'
            )
    
    parser.add_argument(
            '--des_path',
            type = str,
            default = "",
            help = 'path of store image file'
            )
    FLAGS,unparse = parser.parse_known_args();
    des_path = FLAGS.des_path
    #if des_path is None,default is source_path
    if not des_path:
        des_path = FLAGS.source_path.split(".")[0]+".jpg"
        
    transform_to_img(FLAGS.source_path,des_path,FLAGS.size)